h1. NineAuthEngine

NineAuth Engine is - as the name says - an engine for authentication using Binarylogic's "Authlogic":http://github.com/binarylogic/authlogic/ plugin. Nuff saying. Gimme the code!

h1. Installation

First you install the plugin e.g. using git

<pre>
git submodule add git://github.com/sebastiandeutsch/nine_auth_engine.git vendor/plugins/nine_auth_engine
</pre>

or download it and copy/paste it to you vendor/plugin folder.

Then you get the migration file for the user model

<pre>
rake nine_auth_engine:sync
</pre>

Now you gonna add the authlogic gem to your <code>environment.rb</code>

<pre>
config.gem 'binarylogic-authlogic',
  :lib     => 'authlogic',
  :source  => 'http://gems.github.com'
</pre>

and besides sugar some configuration within your config block

<pre>
# Configure NineAuth
config.to_prepare do
  NineAuthEngine.configure do |config|
    config.after_signup_redirect = '/signin/'
    config.after_signin_redirect = '/'
    config.after_signout_redirect = '/signin/'
    config.after_password_reset_redirect = '/signin/'
    config.after_password_update_redirect = '/'
    config.after_signup_disabled_redirect = '/signin/'
    config.disable_signup = false
    config.layout("application")
  end
end
</pre>

And add the module to your ApplicationController

<pre>
include NineAuthEngine::Authentication
</pre>

To protect certain actions simply add an

<pre>
before_filter :require_user
</pre>

to your controller.

h1. Advanced Configuration

If you want to override specific behaviour you just have to copy paste the sections from the plugin (models/views) and add whatever you want to add.

<pre>
class User < ActiveRecord::Base
  acts_as_authentic
  
  validates_presence_of :email

  # put your custom changes here!!!
  def superfoo
    'bar'
  end
  
  def deliver_email_confirmation_instructions!  
    reset_perishable_token!  
    NineAuthMailer.deliver_email_confirmation_instructions(self)  
  end

  def deliver_password_reset_instructions!  
    reset_perishable_token!  
    NineAuthMailer.deliver_password_reset_instructions(self)  
  end
end
</pre>

h1. Tests?

Sure just take a look in the <code>features</code> folder, a lot of cucumber tests will be there. Just
take them to your testing ground and make them compliant to your application.

Note: We took the testsuite from Thouhtbots "Clearance":http://github.com/thoughtbot/clearance/ and migrated it to our engine. Thanks to the thoughtbot team for that.

h1. Gotchas

F: Oh man, your engine sucks - I just installed/started and signed up, but I can't sign in.
A: Yes we're on double opt in, so check your mails and don't forget to configure ActiveMailer.

h1. Rechtsanwalt

Copyright (c) 2009 9elements, released under the MIT license
